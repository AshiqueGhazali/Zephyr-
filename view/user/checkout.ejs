<%- include('../layouts/header') %>
<link rel="stylesheet" href="css/main.css">
<link rel="stylesheet" href="/css/style3.css">

<body>
    
    <header class="header_area sticky-header">
		<div class="main_menu">
			<nav class="navbar navbar-expand-lg navbar-light main_box1">
				<div class="container">

 					<a class="navbar-brand logo_h" href="/home"><img src="/assets/img/logoWhite.png" alt=""></a>
					<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
					 aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>

                    <div class="collapse navbar-collapse offset" id="navbarSupportedContent">
						<ul class="nav navbar-nav menu_nav ml-auto">
							<li class="nav-item"><a class="nav-link1" href="/home">Home</a></li>
							<li class="nav-item"><a class="nav-link1" href="/shop">Product</a></li>
							<li class="nav-item submenu dropdown">
								<a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
								 aria-expanded="false"><%=locals.user?locals.user.Fname:'Login'%></a>
								<ul class="dropdown-menu">
									<li class="nav-item"><a class="nav-link" href="/profileDetails?id=<%= user._id %>">My Profile</a></li>
									<li class="nav-item"><a class="nav-link" href="/orders?id=<%= user._id %>">Orders</a></li>
									<li class="nav-item"><a class="nav-link" href="/wishlist?id=<%= user._id %>">Wishlist</a></li>
									<% if (locals.user) { %>
										<li class="nav-item"><a class="nav-link" href="/logout">Logout</a></li>
									<% }else{ %>
										<li class="nav-item"><a class="nav-link" href="/register">Signup</a></li>
									<% } %>
								</ul>
							</li>
						</ul>
						<ul class="nav navbar-nav navbar-right">
							<li class="nav-item"><a href="/cart" class="cart"><span><i class="fa-solid fa-cart-shopping" style="color: #ffffff;"></i></span></a></li>
							<li class="nav-item">
								<button class="search"><span id="search"><i class="fa-solid fa-magnifying-glass" style="color: #ffffff;"></i></span></button>
							</li>
						</ul>
					</div>
				</div>
			</nav>
		</div>
		<div class="search_input" id="search_input_box">
			<div class="container">
				<form class="d-flex justify-content-between">
					<input type="text" class="form-control" id="search_input" placeholder="Search Here">
					<button type="submit" class="btn"></button>
					<span id="close_search" title="Close Search"><i class="fa-solid fa-magnifying-glass"></i></span>
				</form>
			</div>
		</div>
	</header>
    <br><br>
    <section class="checkout_area section_gap">
        <div class="container">
            <% if (productData && productData.length > 0) { %> 
                <% productData.forEach(function(product) { %>
                    <% if(product.inStock <= 0){ %>
                    <div class="mb-4 p-2 center-content" style="background-color: rgb(255, 154, 154); display: flex;justify-content: center;align-items: center; ">
                        <h5>Product is Out Of Stock</h5>
                    </div>
            <% } %>
            <% }) %>
            <% } %>
            <div class="cupon_area">
                <div class="check_title">
                    <h2>Have a coupon?</h2>
                </div>
                <input type="text" name="coupenCode" placeholder="Enter coupon code" value="<%= coupenCode %>">
                <input type="hidden" name="totalAmount" value="<%= totalPrice %>">
                <button class="tp_btn" type="button" id="applyCouponBtn">Apply Coupon</button>
                <button class="tp_btn" type="button" id="removeCouponBtn">Remove Coupon</button>
            </div>
            <div class="billing_details">
                <div class="row">
                    <div class="col-lg-8">
                        <h3>DELIVERY ADDRESS</h3>
                            <div class="row">
                                <% if(userAddress.length > 0) { %>
                                <% for (let i = 0; i < userAddress.length; i++) { %>
                                    <div class="col-md-12 mb-3">
                                        <div class="card">
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <h5 class="card-title">
                                                        <input type="radio" id="address<%= i %>" class="addressSelector" name="address" value="<%= userAddress[i]._id %>" onchange="toggleButtonVisibility('<%= i %>')">
                                                        <label for="address<%= i %>"><%= userAddress[i].Name %> <%= userAddress[i].Mobile %></label>
                                                    </h5>
                                                    <button id="button<%= i %>" class="genric-btn primary radius " style="display: none;" onclick="showPaymentMethods('address<%= i %>')">DELIVER HERE</button>
                                                </div>
                                                <p class="card-text"><%= userAddress[i].address %>, <%= userAddress[i].Locality %> Subdistrict, <%= userAddress[i].city %> District, <%= userAddress[i].state %></p>
                                            </div>
                                        </div>
                                    </div>
                                <% } %>
                       <% } %>

                       <!-- add new address -->
                       <div class="col-md-12 mb-3">
                       <button type="button" class="genric-btn primary radius btn-lg btn-block" id="addNewAddressBtn"><span class="fa-solid fa-plus ml-2 mr-3"></span> ADD NEW ADDRESS</button>

						
						<div id="newAddressForm" style="display: none; background-color: #f6faff;" class="card">
							<div class="card-body">
								<form id="myForm" >
									<div class="form-group row">
										<div class="col-lg-6 mb-3">
											<input type="text" class="form-control" id="name" name="Name" placeholder="Name">
										</div>
										<div class="col-lg-6 mb-3"">
											<input type="text" class="form-control" id="phone" name="Mobile" placeholder="10 - digit Mobile Number">
										</div>
										<div class="col-lg-6 mb-3"">
											<input type="text" class="form-control" id="pincode" name="PIN" placeholder="Pincode">
										</div>
										<div class="col-lg-6 mb-3"">
											<input type="text" class="form-control" id="locality" name="Locality" placeholder="Locality">
										</div>
										<div class="col-lg-12 mb-3"">
											<input type="text" class="form-control" id="address" rows="3" name="address" placeholder="Address (Area/Street)"></textarea>										
										</div>
										<div class="col-lg-6 mb-3"">
											<input type="text" class="form-control" id="city" name="city" placeholder="City/District/Town">
										</div>
										<div class="col-lg-6 mb-3"">
											<input type="text" class="form-control" id="state" name="state" placeholder="State">
										</div>
										<div class="col-lg-6 mb-3"">
											<input type="text" class="form-control" id="landmark" name="landmark" placeholder="Landmark(optional)">
										</div>
										<div class="col-lg-6 mb-3"">
											<input type="text" class="form-control" id="phone2" name="alternatePhone" placeholder="Alternate Phone(optional)">
										</div>
										<div class="col-lg-6 mb-3"">
											<label for="name" class="">Address Type</label>
											<div class="form-check">
												<input class="form-check-input" type="radio" name="addressType" id="home" value="home">
  												<label class="form-check-label" for="flexRadioDefault1"> Home</label>
												
												<input class="form-check-input ml-4" type="radio" name="addressType" id="work" value="work">
  												<label class="form-check-label ml-5" for="flexRadioDefault1"> Work</label>
											</div>
										</div>
										<div class="col-lg-12 mb-3"">
											<!-- AddAddressFormSubmit() -->
											<button type="submit" class="genric-btn success radius mr-2" onclick="AddAddressFormSubmit()">SAVE ADDRESS</button>
											<button type="button" class="genric-btn danger radius" onclick="clearForm()">Cancel</button>
											<p id="message" style="color: #ffff;"></p>
											<% if(typeof message !== "undefined"){
										    %>
											<p style="color: red;"><%=message%></p> 
											<% } %>
										</div>
									</div>
								</form>
							</div>
						</div>
                    </div>
                       <!-- payment option -->
                                    <div class="col-md-12 ">
                                        <div class="card" style="background-color: #f6faff;">
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <h5 class="card-title">
                                                        PAYMENT OPTIONS
                                                    </h5>
                                                    
                                                </div>
                                                <div style="display: none;" id="peymentMethods">
                                                    <div>
                                                        <input type="radio" id="onlinePayment" name="PAYMENT" value="online Payment" onchange="handlePaymentSelection()">
                                                        <label for="onlinePayment">Online Payment</label>
                                                        <div class="mt-3 mb-3" style="display: none;" id="buttonProceed">
                                                            <button type="button" class="genric-btn primary radius confirmOrderBtn" >PROCEED TO RAZORPAY</button>
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <input type="radio" id="cashOnDelivery" name="PAYMENT" value="cash On Delivery" onchange="handlePaymentSelection()">
                                                        <label for="cashOnDelivery">Cash On Delivery</label>
                                                        <div class="mt-3 mb-3" style="display: none;" id="buttonConform">
                                                            <button type="button" class="genric-btn primary radius confirmOrderBtn" id="confirmOrderBtn">CONFIRM ORDER</button>
                                                        </div>
                                                    </div>
                                                    <div>
                                                        <input type="radio" id="wallet" name="PAYMENT" value="Wallet" onchange="handlePaymentSelection()">
                                                        <label for="wallet">Use Wallet</label>
                                                        <div class="mt-3 mb-3" style="display: none;" id="WalletButtonConform">
                                                            <button type="button" class="genric-btn primary radius confirmOrderBtn" id="confirmOrderWallet">CONFIRM ORDER</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                            </div>


                    </div>



                    <div class="col-lg-4">
                        <div class="order_box">
                            <h2>Your Order</h2>
                            <% if (productData && productData.length > 0) { %> 
                            <ul class="list">
                                <li><a href="#">Product <span>Total</span></a></li>

                                <% productData.forEach(function(product) { %>

                                <li><a href="#"><%= product.productName %><span class="middle"><%= product.quantity || 1 %></span> <span class="last">₹ <%= product.discountPrice %></span></a></li>

                                <% }) %>
                            </ul>
                            <ul class="list list_2">
                                <li><a href="#">Subtotal <span>₹ <%= totalPrice %></span></a></li>
                                <li><a href="#">Shipping <span>₹ 60.00</span></a></li>
                                <li><a href="#">coupen Discount <span>₹ <%= coupenDiscount %></span></a></li>
                                <li><a href="#">Total <span>₹ <%= totalPrice + 60 - coupenDiscount %></span></a></li>
                            </ul>
                            
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--================End Checkout Area =================-->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

	<script>
        var lastCheckedIndex = null;

        function toggleButtonVisibility(index) {
            var button = document.getElementById("button" + index);

            if (lastCheckedIndex !== null && lastCheckedIndex !== index) {
                var lastButton = document.getElementById("button" + lastCheckedIndex);
                lastButton.style.display = "none";
            }

            if (document.getElementById("address" + index).checked) {
                button.style.display = "block";
                lastCheckedIndex = index; 
            } else {
                button.style.display = "none";
                lastCheckedIndex = null; 
            }
        }

        function handlePaymentSelection() {
        const onlinePaymentRadio = document.getElementById('onlinePayment');
        const cashOnDeliveryRadio = document.getElementById('cashOnDelivery');
        const walletRadio = document.getElementById('wallet');

        const buttonProceed = document.getElementById('buttonProceed');
        const buttonConform = document.getElementById('buttonConform');
        const WalletButtonConform = document.getElementById('WalletButtonConform');


        if (onlinePaymentRadio.checked) {
            buttonProceed.style.display = 'block';
            buttonConform.style.display = 'none';
            WalletButtonConform.style.display = 'none';
        } else if (cashOnDeliveryRadio.checked) {
            buttonProceed.style.display = 'none';
            buttonConform.style.display = 'block';
            WalletButtonConform.style.display = 'none';
        }else if(walletRadio.checked) {
            WalletButtonConform.style.display = 'block';
            buttonProceed.style.display = 'none';
            buttonConform.style.display = 'none';
        }

        }

        function showPaymentMethods(radioId) {
            document.getElementById('peymentMethods').style.display = 'block';
            document.getElementById('addNewAddressBtn').style.display = 'none'
            document.getElementById('newAddressForm').style.display = 'none'
            document.querySelectorAll('.addressSelector').forEach(function(radio) {
            radio.addEventListener('click', function(event) {
            if (radio.value !== radioId) {
                event.preventDefault(); 
            }
            });
        });
        }

        // conform order functions

    document.querySelectorAll('.confirmOrderBtn').forEach(button => {
        button.addEventListener('click', function() {
            const addressRadioButtons = document.querySelectorAll('input[name="address"]:checked');
            const paymentRadioButtons = document.querySelectorAll('input[name="PAYMENT"]:checked');
            
            if (addressRadioButtons.length === 0 || paymentRadioButtons.length === 0) {
                Swal.fire('Error', 'Please select both an address and a payment method.', 'error');
                return;
            }
            
            const selectedAddressId = addressRadioButtons[0].value;
            const selectedPaymentMethod = paymentRadioButtons[0].value;
            
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: "btn btn-success",
                    cancelButton: "btn btn-danger"
                },
                buttonsStyling: true
            });
            swalWithBootstrapButtons.fire({
                title: 'Are you sure you want to place this order?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, place it!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    confirmOrder(selectedAddressId, selectedPaymentMethod);
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Your order is safe :)',
                        'error'
                    );
                }
            });
        });
    });

// razorepay
function confirmOrder(addressId, paymentMethod) {
    fetch('/createOrder', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ addressId, paymentMethod })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            if (paymentMethod === "online Payment") {
                var options = {
                    "key": data.key_id,  
                    "amount": data.amount,
                    "currency": "INR",
                    "name": "Zephyr",
                    "description": "Transaction Description",
                    "image": "https://example.com/your_logo",
                    "order_id": data.razorpayOrderId,
                    "handler": function (response){
                        verifyPayment(response.razorpay_payment_id, data.orderId,response.razorpay_signature);
                    },
                    "prefill": {
                        "name": "Customer Name",
                        "email": "customer_email@example.com",
                        "contact": "customer_phone"
                    },
                    "theme": {
                        "color": "#192e68"
                    },
                    "modal": {
                        "ondismiss": function(){
                            window.location.href = '/orders';
                        }
                    }
                };
                var paymentGateway = new Razorpay(options);
                
                paymentGateway.on('payment.failed', function(response){
                    Swal.fire('Payment Failed', 'Your payment could not be processed. Please try again.', 'error').then(() => {
                        window.location.href = '/orders';
                    });
                });

                paymentGateway.open();
            } else {
                Swal.fire({
                    title: "Order Placed",
                    text: "Your Order is Confirmed",
                    icon: "success"
                }).then(() => {
                    window.location.href = `/orderDetails?orderId=${data.orderId}`;
                });
            }
        } else {
            Swal.fire('Sorry', data.message, 'warning');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire('Error', 'Network Error. Try again.', 'error');
    });
}

function verifyPayment(paymentId, orderId, signature) {
    fetch('/verifyPayment', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ 
            paymentId: paymentId,
            orderId: orderId,
            razorpaySignature: signature
         })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                title: "Order Placed",
                text: "Your Order is Confirmed",
                icon: "success"
            }).then(() => {
                window.location.href = `/orderDetails?orderId=${orderId}`; 
            });
        } else {
            Swal.fire('Error', 'Payment verification failed. Please try again.', 'error')
            .then(() => {
                window.location.href = `/orders`; 
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire('Error', 'Network Error. Try again.', 'error');
    });
}


    // add new address

    document.getElementById('addNewAddressBtn').addEventListener('click', function() {
        var newAddressForm = document.getElementById('newAddressForm');
        if (newAddressForm.style.display === 'none') {
            newAddressForm.style.display = 'block';
        } else {
            newAddressForm.style.display = 'none';
        }
    });

    // add address form submition 
	function AddAddressFormSubmit() {
		addressValidation(event, 'myForm', 'message')
		const form = document.getElementById(`myForm`);
		const formData = new FormData(form);
		const url = '/addAddress'; 

		const jsonObject = {};
		formData.forEach((value, key) => {
			jsonObject[key] = value;
		});

		jsonObject.is_Home = document.getElementById('home').checked;
		jsonObject.is_Work = document.getElementById('work').checked;

		fetch(url, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(jsonObject)
		})
		.then(response => {
			if (!response.ok) {
				throw new Error('Network response was not ok');
			}
			return response.json();
		})
		.then(data => {
			document.getElementById(`message${index}`).textContent = 'Address Addedd successfully!';
			setTimeout(() => {
				window.location.reload(); 
			}, 1000);
		})
		.catch(error => {
			console.error('There was a problem with the fetch operation:', error);
			document.getElementById(`message${index}`).textContent = 'Failed to edit.';
		});
	}

    // apply coupon

    document.getElementById('applyCouponBtn').addEventListener('click', function() {
        var couponCode = document.querySelector('input[name="coupenCode"]').value;
        var totalAmount = document.querySelector('input[name="totalAmount"]').value;; 

        fetch('/applyCoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ couponCode, totalAmount })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                  title:"Coupen Applied",
                  text:"Coupen Applied Successfully",
                  icon: "success"
                }).then(() => {
                  window.location.reload();
                });
            } else {
                Swal.fire({
                  title: "Failed!",
                  text:  data.message,
                  icon: "error"
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });

    // remove Coupen 

    document.getElementById('removeCouponBtn').addEventListener('click', function() {

        fetch('/removeCoupen', {
            method: 'GET',
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                  title:"Coupen Removed",
                  text:"Coupen Removed Successfully",
                  icon: "success"
                }).then(() => {
                  window.location.reload();
                });
            } else {
                Swal.fire({
                  title: "Failed!",
                  text:  data.message,
                  icon: "error"
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });
    </script>
<script src="/js/validation.js"></script>

<%- include('../layouts/footer') %>